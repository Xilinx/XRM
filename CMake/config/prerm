#!/bin/sh

#
# UBUNTU NOTE
# -----------
# 1. When downgrading (say from 1.3.0 to 1.2.0) then prerm of 1.3.0 is run
#    but postinst of 1.2.0 is run. The prerm is invoked with "upgrade 1.2.0"
#    argument and postinst is invoked with "configure 1.3.0" argument.
# 2. When upgrading (say from 1.2.0 to 1.3.0) then prerm of 1.2.0 is run
#    but postinst of 1.3.0 is run. The prerm is invoked with "upgrade 1.3.0"
#    argument and postinst is invoked with "configure 1.2.0" argument.
# 3. When re-installing (say from 1.2.0 to 1.2.0) then prerm of 1.2.0 is run
#    and postinst of 1.2.0 is run. The prerm is invoked with "upgrade 1.2.0"
#    argument and postinst is invoked with "configure 1.2.0" argument.
#
# RHEL/CentOS NOTE
# ----------------
# 1. When downgrading (say from 1.3.0 to 1.2.0) then oddly postinst of 1.2.0
#    is run first followed by prerm of 1.3.0 run. The postinst is invoked with
#    "2" and prerm is invoked with "1".
# 2. When upgrading (say from 1.2.0 to 2.3.0) then prerm of 1.2.0 is NOT run
#    but postinst of 1.3.0 is run. The postinst is invoked with "2" argument.
# 3. When re-installing (say from 1.2.0 to 1.2.0) then prerm is NOT run but
#    and postinst of 1.2.0 is run. The postinst is invoked with "2" argument.

# In the case of upgrade, downgrade or re-install we would like to preserve the
# configuration of the components and hence we want to handle the configuration
# in postinst script.

lsb_release -si | grep -Eq "^RedHat|^CentOS"
if [ $? -eq 0 ] && [ $1 -ge 1 ]; then
    echo "Cleanup is skipped for package upgrade/downgrade/re-install on RHEL/CentOS"
    exit 0
fi

lsb_release -si | grep -Eq "^Ubuntu|^Debian"
if [ $? -eq 0 ] && [ "$1" = "upgrade" ]; then
    echo "Cleanup is skipped for package upgrade on Ubuntu/Debian"
    exit 0
fi

# If we are here XRM is being uninstalled. It is NOT one of upgrade, downgrade or
# re-install.

# Disable XRM daemon
echo "Running prerm ..."
echo "Disabling starting XRM daemon on boot"
systemctl disable xrmd > /dev/null 2>&1
FILE=/etc/systemd/system/xrm.service
if [ -f "$FILE" ]; then
    echo "$FILE exist ... Stopping xrmd service"
    systemctl stop xrmd > /dev/null 2>&1
    systemctl disable xrmd > /dev/null 2>&1
    systemctl daemon-reload
fi

rm -f /dev/shm/xrm.data

lsb_release -si | grep -Eq "^RedHat|^CentOS"
if [ $? -eq 0 ]; then
    rm -f /usr/lib64/libxrm.so.1
    rm -f /usr/lib64/libxrm.so
fi

lsb_release -si | grep -Eq "^Ubuntu|^Debian"
if [ $? -eq 0 ]; then
    rm -f /usr/lib/libxrm.so.1
    rm -f /usr/lib/libxrm.so
fi

exit 0
